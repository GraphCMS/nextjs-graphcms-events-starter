{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jmartin/Development/GraphCMS/Microsites/graphcms-events/src/pages/[event-slug].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Image from 'graphcms-image';\nimport Speakers from '../components/Speakers';\nimport Venue from '../components/Venue';\nimport Schedule from '../components/Schedule';\nimport Sponsors from '../components/Sponsors';\n\nconst {\n  GraphQLClient\n} = require('graphql-request');\n\nfunction EventPage({\n  event,\n  speakers,\n  venue,\n  sponsors,\n  tracks\n}) {\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    className: \"bg-cover bg-purple-800 pb-32 pt-8\",\n    style: {\n      clipPath: 'polygon(0% 0%, 100% 0%, 100% 66%, 0% 100%)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container mx-auto px-6 py-12 lg:py-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"w-2/3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"text-white text-4xl md:text-6xl font-bold mb-4 leading-tight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, event.title), __jsx(\"div\", {\n    className: \"body-copy\",\n    dangerouslySetInnerHTML: {\n      __html: event.description.html\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })))), __jsx(Speakers, {\n    speakers: speakers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(Schedule, {\n    tracks: tracks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(Venue, _extends({}, venue, {\n    image: event.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(Sponsors, {\n    sponsors: sponsors,\n    event: event.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n}\n\nEventPage.getInitialProps = async ctx => {\n  const query = `\n    fragment assetInfo on Asset {\n      handle\n      width\n      height\n      url\n    }\n  \n    fragment venueInfo on Venue {\n      id\n      name\n      location {\n        lat: latitude\n        lng: longitude\n      }\n      street\n      city\n      postcode\n      country\n    }\n  \n    fragment speakerInfo on Speaker {\n      name\n      headline\n      photo {\n        ...assetInfo\n      }\n    }\n  \n    fragment talkInfo on Talk {\n      id\n      title\n      speaker {\n        ...speakerInfo\n      }\n    }\n  \n    fragment trackInfo on Track {\n      id\n      title\n      mc {\n        ...speakerInfo\n      }\n      timeSlots(orderBy: start_ASC) {\n        id\n        start\n        end\n        talk {\n          ...talkInfo\n        }\n        sessionBreak: break {\n          title\n        }\n      }\n    }\n  \n    fragment EventInfo on Event {\n      id\n      title\n      slug\n      start\n      image {\n        ...assetInfo\n      }\n      description {\n        html\n      }\n      tracks {\n        ...trackInfo\n      }\n      sponsors {\n        name\n        url\n        logo {\n          ...assetInfo\n        }\n      }\n      venue {\n        ...venueInfo\n      }\n    }\n  \n    query {\n        event(where:{\n            slug: \"${ctx.asPath.replace('/', '')}\"\n          }) {\n            ...EventInfo\n          }\n    }\n  `;\n  const graphQLClient = new GraphQLClient(process.env.GRAPHCMS_ENDPOINT, {\n    credentials: 'include',\n    mode: 'cors',\n    headers: {\n      Authorization: `Bearer ${process.env.GATSBY_GRAPHCMS_TOKEN}`\n    }\n  });\n  const request = await graphQLClient.request(query);\n  const {\n    event\n  } = request;\n\n  if (event) {\n    const {\n      tracks,\n      sponsors,\n      venue\n    } = event,\n          rest = _objectWithoutProperties(event, [\"tracks\", \"sponsors\", \"venue\"]);\n\n    const sortBySpeaker = (a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      if (a.name === b.name) return 0;\n    };\n\n    const speakers = tracks.reduce((collector, currentTrack) => {\n      return [...collector, ...currentTrack.timeSlots.map(timeSlot => timeSlot.talk ? timeSlot.talk.speaker : null)].filter(Boolean).sort(sortBySpeaker).reduce((collector, current) => {\n        if (collector.length) {\n          if (current.name === collector[collector.length - 1].name) {\n            return collector;\n          } else {\n            return [...collector, current];\n          }\n        } else {\n          return [...collector, current];\n        }\n      }, []);\n    }, []);\n    return {\n      sponsors,\n      venue,\n      speakers,\n      tracks,\n      event: rest\n    };\n  }\n};\n\nexport default EventPage;","map":{"version":3,"sources":["/Users/jmartin/Development/GraphCMS/Microsites/graphcms-events/src/pages/[event-slug].js"],"names":["React","Image","Speakers","Venue","Schedule","Sponsors","GraphQLClient","require","EventPage","event","speakers","venue","sponsors","tracks","clipPath","title","__html","description","html","image","getInitialProps","ctx","query","asPath","replace","graphQLClient","process","env","GRAPHCMS_ENDPOINT","credentials","mode","headers","Authorization","GATSBY_GRAPHCMS_TOKEN","request","rest","sortBySpeaker","a","b","name","reduce","collector","currentTrack","timeSlots","map","timeSlot","talk","speaker","filter","Boolean","sort","current","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBC,OAAO,CAAC,iBAAD,CAAjC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAnB,EAAiE;AAC/D,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,mCADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,8DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,KADT,CADF,EAIE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEP,KAAK,CAACQ,WAAN,CAAkBC;AAA5B,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CANF,CADF,EAmBE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAER,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBE,MAAC,KAAD,eAAWF,KAAX;AAAkB,IAAA,KAAK,EAAEF,KAAK,CAACU,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBF,EAsBE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEP,QAApB;AAA8B,IAAA,KAAK,EAAEH,KAAK,CAACM,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA0BD;;AAEDP,SAAS,CAACY,eAAV,GAA4B,MAAMC,GAAN,IAAa;AACvC,QAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAoFID,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAA4B;;;;;GApF/C;AA2FA,QAAMC,aAAa,GAAG,IAAInB,aAAJ,CAAkBoB,OAAO,CAACC,GAAR,CAAYC,iBAA9B,EAAiD;AACrEC,IAAAA,WAAW,EAAE,SADwD;AAErEC,IAAAA,IAAI,EAAE,MAF+D;AAGrEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,OAAO,CAACC,GAAR,CAAYM,qBAAsB;AADpD;AAH4D,GAAjD,CAAtB;AAQA,QAAMC,OAAO,GAAG,MAAMT,aAAa,CAACS,OAAd,CAAsBZ,KAAtB,CAAtB;AACA,QAAM;AAAEb,IAAAA;AAAF,MAAYyB,OAAlB;;AAEA,MAAIzB,KAAJ,EAAW;AACT,UAAM;AAAEI,MAAAA,MAAF;AAAUD,MAAAA,QAAV;AAAoBD,MAAAA;AAApB,QAAuCF,KAA7C;AAAA,UAAoC0B,IAApC,4BAA6C1B,KAA7C;;AAEA,UAAM2B,aAAa,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,UAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,UAAIF,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAjB,EAAuB,OAAO,CAAP;AACxB,KAJD;;AAMA,UAAM7B,QAAQ,GAAGG,MAAM,CAAC2B,MAAP,CAAc,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC1D,aAAO,CACL,GAAGD,SADE,EAEL,GAAGC,YAAY,CAACC,SAAb,CAAuBC,GAAvB,CAA2BC,QAAQ,IACpCA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACC,IAAT,CAAcC,OAA9B,GAAwC,IADvC,CAFE,EAMJC,MANI,CAMGC,OANH,EAOJC,IAPI,CAOCd,aAPD,EAQJI,MARI,CAQG,CAACC,SAAD,EAAYU,OAAZ,KAAwB;AAC9B,YAAIV,SAAS,CAACW,MAAd,EAAsB;AACpB,cAAID,OAAO,CAACZ,IAAR,KAAiBE,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCb,IAArD,EAA2D;AACzD,mBAAOE,SAAP;AACD,WAFD,MAEO;AACL,mBAAO,CAAC,GAAGA,SAAJ,EAAeU,OAAf,CAAP;AACD;AACF,SAND,MAMO;AACL,iBAAO,CAAC,GAAGV,SAAJ,EAAeU,OAAf,CAAP;AACD;AACF,OAlBI,EAkBF,EAlBE,CAAP;AAmBD,KApBgB,EAoBd,EApBc,CAAjB;AAsBA,WAAO;AACLvC,MAAAA,QADK;AAELD,MAAAA,KAFK;AAGLD,MAAAA,QAHK;AAILG,MAAAA,MAJK;AAKLJ,MAAAA,KAAK,EAAE0B;AALF,KAAP;AAOD;AACF,CA9ID;;AAgJA,eAAe3B,SAAf","sourcesContent":["import React from 'react';\nimport Image from 'graphcms-image';\n\nimport Speakers from '../components/Speakers';\nimport Venue from '../components/Venue';\nimport Schedule from '../components/Schedule';\nimport Sponsors from '../components/Sponsors';\n\nconst { GraphQLClient } = require('graphql-request');\n\nfunction EventPage({ event, speakers, venue, sponsors, tracks }) {\n  return (\n    <React.Fragment>\n      <section\n        className=\"bg-cover bg-purple-800 pb-32 pt-8\"\n        style={{\n          clipPath: 'polygon(0% 0%, 100% 0%, 100% 66%, 0% 100%)',\n        }}\n      >\n        <div className=\"container mx-auto px-6 py-12 lg:py-20\">\n          <div className=\"w-2/3\">\n            <h1 className=\"text-white text-4xl md:text-6xl font-bold mb-4 leading-tight\">\n              {event.title}\n            </h1>\n            <div\n              className=\"body-copy\"\n              dangerouslySetInnerHTML={{ __html: event.description.html }}\n            />\n          </div>\n        </div>\n      </section>\n      <Speakers speakers={speakers} />\n      <Schedule tracks={tracks} />\n      <Venue {...venue} image={event.image} />\n      <Sponsors sponsors={sponsors} event={event.title} />\n    </React.Fragment>\n  );\n}\n\nEventPage.getInitialProps = async ctx => {\n  const query = `\n    fragment assetInfo on Asset {\n      handle\n      width\n      height\n      url\n    }\n  \n    fragment venueInfo on Venue {\n      id\n      name\n      location {\n        lat: latitude\n        lng: longitude\n      }\n      street\n      city\n      postcode\n      country\n    }\n  \n    fragment speakerInfo on Speaker {\n      name\n      headline\n      photo {\n        ...assetInfo\n      }\n    }\n  \n    fragment talkInfo on Talk {\n      id\n      title\n      speaker {\n        ...speakerInfo\n      }\n    }\n  \n    fragment trackInfo on Track {\n      id\n      title\n      mc {\n        ...speakerInfo\n      }\n      timeSlots(orderBy: start_ASC) {\n        id\n        start\n        end\n        talk {\n          ...talkInfo\n        }\n        sessionBreak: break {\n          title\n        }\n      }\n    }\n  \n    fragment EventInfo on Event {\n      id\n      title\n      slug\n      start\n      image {\n        ...assetInfo\n      }\n      description {\n        html\n      }\n      tracks {\n        ...trackInfo\n      }\n      sponsors {\n        name\n        url\n        logo {\n          ...assetInfo\n        }\n      }\n      venue {\n        ...venueInfo\n      }\n    }\n  \n    query {\n        event(where:{\n            slug: \"${ctx.asPath.replace('/', '')}\"\n          }) {\n            ...EventInfo\n          }\n    }\n  `;\n\n  const graphQLClient = new GraphQLClient(process.env.GRAPHCMS_ENDPOINT, {\n    credentials: 'include',\n    mode: 'cors',\n    headers: {\n      Authorization: `Bearer ${process.env.GATSBY_GRAPHCMS_TOKEN}`,\n    },\n  });\n\n  const request = await graphQLClient.request(query);\n  const { event } = request;\n\n  if (event) {\n    const { tracks, sponsors, venue, ...rest } = event;\n\n    const sortBySpeaker = (a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      if (a.name === b.name) return 0;\n    };\n\n    const speakers = tracks.reduce((collector, currentTrack) => {\n      return [\n        ...collector,\n        ...currentTrack.timeSlots.map(timeSlot =>\n          timeSlot.talk ? timeSlot.talk.speaker : null\n        ),\n      ]\n        .filter(Boolean)\n        .sort(sortBySpeaker)\n        .reduce((collector, current) => {\n          if (collector.length) {\n            if (current.name === collector[collector.length - 1].name) {\n              return collector;\n            } else {\n              return [...collector, current];\n            }\n          } else {\n            return [...collector, current];\n          }\n        }, []);\n    }, []);\n\n    return {\n      sponsors,\n      venue,\n      speakers,\n      tracks,\n      event: rest,\n    };\n  }\n};\n\nexport default EventPage;\n"]},"metadata":{},"sourceType":"module"}